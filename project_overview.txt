"The Ultimate Free PDF Toolkit (ilovepdf.com Replica)"
OBJECTIVE

Build an exact replica of https://www.ilovepdf.com/ with every single feature 100% operational and accessible to any user worldwide, with NO login required, zero costs to the owner, and a stunning, futuristic user interface.
The complete project must be fully open-source, with all code committed to my connected GitHub repo.
Deploy the live web app for free, with unlimited access for all users.
CORE REQUIREMENTS

    Feature Parity

        Every single feature on ilovepdf.com should be present and functionally equivalent or superior.

        Users should be able to perform the following (but not limited to):

            Merge PDF

            Split PDF

            Compress PDF

            PDF to Word, PDF to PowerPoint, PDF to Excel

            Word, PowerPoint, Excel to PDF

            PDF to JPG, JPG to PDF

            PDF to PNG, PNG to PDF

            Organize PDF (reorder pages, rotate, delete)

            Edit PDF (add text, shapes, images, draw)

            Add Page Numbers, Watermark, or Header/Footer

            Unlock PDF, Protect PDF

            eSign PDF, Fill & Sign PDF forms

            Repair PDF

            PDF Reader & Viewer

            PDF OCR (if feasible with free/OSS tech)

            HTML to PDF conversion

            Add/remove password

            All other features available on ilovepdf.com (review each and add everything)

        Every tool must be intuitive, fast, and reliable for large files.

    Free and Open Source

        No cost to the user or owner under any circumstances.

        Use only free, open-source tools and APIs (e.g., PDF.js, PDF-Lib, PyPDF2, pdfcpu, etc.).

        Do NOT use any paid APIs, rate-limited services, or anything that can be turned off or starts charging.

        All features should work for unlimited files and unlimited users.

    Zero Login/Registration

        No account creation, no login wall, no email collection, no analytics or tracking of any kind.

        The website should be immediately accessible.

    Free Hosting

        Deploy on a free hosting provider with no time or user/file limits (e.g., GitHub Pages, Render, Vercel, Netlify, Cloudflare Pages, or other creative OSS hosting solutions).

        All code should be visible in my GitHub repo.

        The live site link should always work and be easy to access/share.

    Premium, Futuristic UI/UX

        The site should look ultra-modern and visually stunning:

            Use glassmorphism, neumorphism, or other advanced modern design systems.

            Animated transitions, micro-interactions, and smooth drag-and-drop.

            Dark mode as default, but light mode switchable.

            Each tool should be easy to find and use, with gorgeous cards, icons, and a strong brand identity.

            Mobile, tablet, and desktop responsive with pixel-perfect rendering.

        Include a catchy logo, hero section, and smooth onboarding/help tips (all editable by owner).

        Custom loading/progress animations for all file processing tasks.

    User Workflow

        No data ever leaves the user’s browser (if possible) – process everything client-side, except for features where server-side is unavoidable (e.g., OCR).

        If server is needed, use free, open-source self-hosted code, never 3rd party SaaS.

        Allow users to download processed files instantly, with zero waiting, no email, no popups.

        Enable drag-and-drop and multi-file uploads everywhere.

        All file processing must be reliable for big files (up to at least 100MB per file).

    Reliability & Maintainability

        Codebase must be clean, well-commented, and modular.

        Each tool must be in a dedicated module/folder.

        Add a clear README with setup, contribution, and troubleshooting instructions.

        Document any limitations (e.g., certain OCR features may be slower for big files if 100% client-side).

    Accessibility

        Fully accessible for screen readers and keyboard navigation.

        Add proper ARIA labels and WCAG 2.1 compliance.

    Branding & Legal

        Website must be branded as a unique, non-infringing project, with no references to "iLovePDF", but with identical functionality.

        Add a suitable open-source license (e.g., MIT, Apache 2.0).

SPECIFIC TASKS & INSTRUCTIONS

    Survey and List All Features

        Crawl https://www.ilovepdf.com/ and create a checklist of every single tool and sub-tool present.

        For each, provide a short description and intended UX flow.

    Frontend

        Build with a modern, fast frontend framework (React, Svelte, Vue, etc.—use what is best for zero-cost/free hosting).

        UI must be gorgeous and futuristic, with all icons, graphics, and layouts matching or surpassing ilovepdf.com.

        Home page should list all tools with animated cards.

        Each tool gets its own dedicated page/component.

        Add a global navigation bar, FAQ/about, and legal/license page.

        No tracking, no cookies, no analytics.

    Backend (if required)

        Only for features that cannot be performed 100% in-browser (OCR, heavy conversions, etc.).

        Use free-tier services or deploy a free server using Render, Fly.io, Vercel serverless, or similar.

        Code must be open-source and simple to self-host.

    PDF Processing

        Use open-source libraries for all PDF functions.

        Where possible, process PDFs directly in-browser (WebAssembly, Web Workers, etc.).

        For Office document conversions, use OSS tools or online APIs with no auth/key needed, or make conversion optional if not possible.

        For OCR, use open-source engines (e.g., Tesseract.js in-browser, or server-side Tesseract if feasible).

    Performance & Scalability

        Must handle hundreds of users simultaneously with no slowdown.

        Use lazy-loading and code splitting to keep the app fast.

        No hidden costs or rate limits at any point.

    Quality Assurance

        Every tool must be thoroughly tested, with zero broken flows.

        Add end-to-end and unit tests as possible.

    Deployment

        Auto-deploy to free hosting via GitHub Actions, Vercel, Netlify, or similar.

        Keep the site always available, and ensure updating the code auto-deploys.

    Documentation

        README must explain every feature, setup, and how to contribute.

        Add a section on how all user data stays private and is never stored.

        List all OSS libraries and frameworks used.

DELIVERABLES

Complete, fully working source code for every feature, in the connected GitHub repo.

Free, public live deployment with all tools accessible.

README with:

Features checklist

Setup and deployment guide

How to contribute

Licensing info

    FAQ/help

Demo video/gif of the main tools in use (if possible).

    Ongoing: If new features are added to ilovepdf.com, update the project to match.

NOTES

    This project is intended as a forever-free, privacy-first alternative to iLovePDF and all other paid PDF toolkits.

    Do not include any monetization, upsells, or advertisements.

    Prioritize user privacy, speed, ease of use, and stunning visuals.

    The entire process, from start to finish, should be automated by Cursor—no manual intervention required from me except reviewing PRs if needed.

    I will connect the GitHub repo and configure hosting myself; Cursor should not create a repo, just work inside the provided one.

SUMMARY

Build a feature-complete, 100% free, open-source, and futuristic alternative to ilovepdf.com, with every tool, no logins, and no compromises. All code must be in the connected GitHub repo, and the live site must be publicly available for anyone to use, forever.
